import Checkout from "./application/Checkout";
import GetOrdersByCpf from "./application/GetOrdersByCpf";
import Preview from "./application/Preview";
import SimulateFreight from "./application/SimulateFreight";
import Coupon from "./domain/entity/Coupon";
import Item from "./domain/entity/Item";
import OrderController from "./infra/controller/OrderController";
import PgPromiseAdapter from "./infra/database/PgPromiseAdapter";
import MemoryRepositoryFactory from "./infra/factory/MemoryRepositoryFactory";
import ExpressAdapter from "./infra/http/ExpressAdapter";
import HapiHttp from "./infra/http/HapiAdapters";
import CouponRepositoryMemory from "./infra/repository/memory/CouponRepositoryMemory";
import ItemRepositoryDatabase from "./infra/repository/memory/database/ItemRepositoryDatabase";
import ItemRepositoryMemory from "./infra/repository/memory/ItemRepositoryMemory";
import OrderRepositoryMemory from "./infra/repository/memory/OrderRepositoryMemory";

const connection = new PgPromiseAdapter();
const itemRepository = new ItemRepositoryDatabase(connection);
const orderRepository = new OrderRepositoryMemory();
const couponRepository = new CouponRepositoryMemory();
const repositoryFactory = new MemoryRepositoryFactory();
couponRepository.save(new Coupon("VALE20", 20));
const preview = new Preview(itemRepository, couponRepository);
const checkout = new Checkout(repositoryFactory);
const getOrdersByCpf = new GetOrdersByCpf(orderRepository);
const simulateFreight = new SimulateFreight(itemRepository);
const httpServer = new ExpressAdapter();
// const httpServer = new HapiHttp();
new OrderController(httpServer, preview, checkout, getOrdersByCpf, simulateFreight);
httpServer.listen(3000);
